#-*- coding: utf-8 -*-
'''
    Torrenter v2 plugin for XBMC/Kodi
    Copyright (C) 2015 srg70, RussakHH, DiMartino
'''

import sys
import os
import platform
import xbmc


def get_libname(platform_):
    libname = []
    if platform_['system'] in ['darwin', 'linux_x86', 'linux_arm', 'linux_armv6', 'linux_armv7', 'linux_x86_64']:
        libname = ['libtorrent.so']
    elif platform_['system'] == 'windows':
        libname = ['libtorrent.pyd']
    elif platform_['system'] in ['android_armv7', 'android_x86']:
        libname = ['libtorrent.so', 'liblibtorrent.so']
    return libname


def get_platform():
    ret = {"arch": sys.maxsize > 2 ** 32 and "x64" or "x86"}
    if xbmc.getCondVisibility("system.platform.android"):
        ret["os"] = "android"
        if "arm" in os.uname()[4]:
            ret["arch"] = "arm"
    elif xbmc.getCondVisibility("system.platform.linux"):
        ret["os"] = "linux"
        uname = platform.uname()[4].lower()
        if "arm" in uname:
            if "armv7" in uname or "aarch64" in uname:
                ret["arch"] = "armv7"
            elif "armv6" in uname:
                ret["arch"] = "armv6"
            else:
                ret["arch"] = "arm"
    elif xbmc.getCondVisibility("system.platform.windows"):
        ret["os"] = "windows"
    elif xbmc.getCondVisibility("system.platform.osx"):
        ret["os"] = "darwin"
    elif xbmc.getCondVisibility("system.platform.ios"):
        ret["os"] = "ios"
        ret["arch"] = "arm"
    ret = get_system(ret)
    return ret


def get_system(ret):
    ret["system"] = ''
    ret["message"] = ['', '']
    if ret["os"] == 'windows':
        ret["system"] = 'windows'
    elif ret["os"] == "linux" and ret["arch"] == "x64":
        ret["system"] = 'linux_x86_64'
    elif ret["os"] == "linux" and ret["arch"] == "x86":
        ret["system"] = 'linux_x86'
    elif ret["os"] == "linux" and "arm" in ret["arch"]:
        ret["system"] = 'linux_'+ret["arch"]
    elif ret["os"] == "android":
        if ret["arch"] == 'arm':
            ret["system"] = 'android_armv7'
        else:
            ret["system"] = 'android_x86'
    elif ret["os"] == "darwin":
        ret["system"] = 'darwin'
    elif ret["os"] == "ios":
        ret["system"] = 'ios'
    return ret
