#-*- coding: utf-8 -*-
'''
    Torrenter v2 plugin for XBMC/Kodi
    Copyright (C) 2015 srg70, RussakHH, DiMartino
'''

from functions import LibraryManager, log
from platform_pulsar import get_platform
import xbmc
import sys
import os
from platform import uname, machine, processor, system
from traceback import format_exc


# __addon__ = xbmcaddon.Addon()
# __version__ = __addon__.getAddonInfo('version')
# __id__ = __addon__.getAddonInfo('name') + " v." + __version__
# __language__ = __addon__.getLocalizedString

libtorrent = None
platform = get_platform()
dirname = os.path.join(xbmc.translatePath('special://temp'), 'xbmcup', 'plugin.video.yatp', 'python_libtorrent')
log('dirname:' + str(dirname))

default_path = '0.16.19'
platform['version'] = default_path

if not os.path.exists(os.path.join(os.path.dirname(__file__), platform['system'], platform['version'])):
    log('set_version: back to default '+ default_path)
    platform['version'] = default_path
dest_path = os.path.join(dirname, platform['system'], platform['version'])
sys.path.insert(0, dest_path)

lm = LibraryManager(dest_path, platform)
if not lm.check_exist():
    ok=lm.download()
    xbmc.sleep(2000)

# if __addon__.getSetting('plugin_name')!=__id__:
#     __addon__.setSetting('plugin_name', __id__)
#     lm.update()

log('platform: ' + str(platform))
if platform['system'] not in ['windows']:
    log('os: '+str(uname()))

try:
    if platform['system'] in ['linux_x86', 'windows', 'linux_armv6', 'linux_armv7', 'linux_x86_64']:
        import libtorrent
    elif platform['system'] in ['darwin']:
        import imp
        path_list = [dest_path]
        log('path_list = ' + str(path_list))
        fp, pathname, description = imp.find_module('libtorrent', path_list)
        log('fp = ' + str(fp))
        log('pathname = ' + str(pathname))
        try:
            libtorrent = imp.load_module('libtorrent', fp, pathname, description)
        finally:
            if fp: fp.close()
    elif platform['system'] in ['android_armv7', 'android_x86']:
        import imp
        from ctypes import CDLL
        try:
            dll_path=os.path.join(dest_path, 'liblibtorrent.so')
            log('CDLL path = ' + dll_path)
            liblibtorrent=CDLL(dll_path)
            log('CDLL = ' + str(liblibtorrent))
        except:
            # If no permission in dest_path we need to go deeper!
            try:
                dest_path=lm.android_workaround(new_dest_path='/data/data/org.xbmc.kodi/lib/')
                dll_path=os.path.join(dest_path, 'liblibtorrent.so')
                log('NEW CDLL path = ' + dll_path)
                liblibtorrent=CDLL(dll_path)
                log('CDLL = ' + str(liblibtorrent))
            except:
                # http://i3.kym-cdn.com/photos/images/original/000/531/557/a88.jpg
                dest_path=lm.android_workaround(new_dest_path=xbmc.translatePath('special://xbmc'))
                dll_path=os.path.join(dest_path, 'liblibtorrent.so')
                log('NEW CDLL path = ' + dll_path)
                liblibtorrent=CDLL(dll_path)
                log('CDLL = ' + str(liblibtorrent))
        liblibtorrent=CDLL(dll_path)
        log('CDLL = ' + str(liblibtorrent))
        path_list = [dest_path]
        log('path_list = ' + str(path_list))
        fp, pathname, description = imp.find_module('libtorrent', path_list)
        log('fp = ' + str(fp))
        log('pathname = ' + str(pathname))
        try:
            libtorrent = imp.load_module('libtorrent', fp, pathname, description)
        finally:
            if fp: fp.close()

    log('Imported libtorrent v' + libtorrent.version + ' from "' + dest_path + '"')

except:
    log('Error importing libtorrent from "' + dest_path + '". Exception:\n' + format_exc(), xbmc.LOGERROR)
    raise RuntimeError('Your platform is not supported!')

def get_libtorrent():
    return libtorrent
